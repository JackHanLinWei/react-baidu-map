{"version":3,"sources":["../src/Map/README.md"],"names":[],"mappings":"0IAAA,OAAe","file":"static/js/138.a69b1fa1.chunk.js","sourcesContent":["export default \"Map 组件\\n===\\n\\nMap 组件是其他组件的基础，其他地图组件必须作为 Map 的子组件使用；Map 组件会给所有的子组件注入两个属性，`<Map>` 组件必须包裹在 `<APILoader>` 组件内，该组件作用是加载百度地图 SDK。\\n\\n```jsx\\nimport { Map, APILoader } from '@uiw/react-baidu-map';\\n```\\n\\n### 基本用法\\n\\nMap 的父组件必须具有宽度和高度；\\n\\n<!--DemoStart,bgWhite--> \\n```jsx\\nimport { Map, APILoader } from '@uiw/react-baidu-map';\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%', height: '300px' }}>\\n    <APILoader akay=\\\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\\\">\\n      <Map />\\n    </APILoader>\\n  </div>\\n);\\nReactDOM.render(<Demo />, _mount_);\\n```\\n<!--End-->\\n\\n### 小工具\\n\\n百度地图上负责与地图交互的UI元素称为控件。百度地图API中提供了丰富的控件，您还可以通过 Control 类来实现自定义控件，[`百度控件文档`](http://lbsyun.baidu.com/index.php?title=jspopular3.0/guide/widget)。\\n\\n<!--DemoStart,bgWhite--> \\n```jsx\\nimport { Map, APILoader } from '@uiw/react-baidu-map';\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%', height: '300px' }}>\\n    <APILoader akay=\\\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\\\">\\n      <Map\\n        ready={(bmap, map) => {\\n          console.log('准备好了！', map);\\n          // 启用滚轮放大缩小，默认禁用\\n          map.enableScrollWheelZoom();\\n        }}\\n        widget={[\\n          'GeolocationControl',\\n          {\\n            name: 'OverviewMapControl',\\n            options: {\\n              isOpen: true,\\n            }\\n          },\\n          {\\n            name: 'NavigationControl',\\n            options: (BMap) => {\\n              return {\\n                offset: new BMap.Size(150, 5),\\n                showZoomInfo: false,\\n                enableGeolocation: true,\\n              }\\n            }\\n          }\\n        ]}\\n      />\\n    </APILoader>\\n  </div>\\n);\\nReactDOM.render(<Demo />, _mount_);\\n```\\n<!--End-->\\n\\n### 可控属性\\n\\n<!--DemoStart,bgWhite--> \\n```jsx\\nimport { Map, APILoader } from '@uiw/react-baidu-map';\\n\\nconst Demo = () => {\\n  const [center, setCenter] = useState('北京');\\n  const [enableScrollWheelZoom, setEnableScrollWheelZoom] = useState(true);\\n  return (\\n    <div style={{ width: '100%', height: '300px' }}>\\n      <button onClick={() => setCenter('北京')}>北京</button>\\n      <button onClick={() => setCenter('上海')}>上海</button>\\n      <button onClick={() => setEnableScrollWheelZoom(!enableScrollWheelZoom)}>{enableScrollWheelZoom ? '禁用': '启用'}滚轮放大缩小</button>\\n      <APILoader akay=\\\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\\\">\\n        <Map enableScrollWheelZoom={enableScrollWheelZoom} zoom={10}  center={center}/>\\n      </APILoader>\\n    </div>\\n  );\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n<!--End-->\\n\\n### 使用 hooks\\n\\n`map`, `setMap`, `container`, `setContainer`, `zoom`, `setZoom`, `setCenter`, `autoLocalCity`, `setAutoLocalCity`,\\n\\n<!--DemoStart,bgWhite--> \\n```jsx\\nimport { useRef, useEffect, useState } from 'react';\\nimport { Map, APILoader, useMap } from '@uiw/react-baidu-map';\\n\\nconst Example = () => {\\n  const divElm = useRef();\\n  const [zoom, setZoom] = useState(15)\\n  const { setContainer, map, center, setCenter, setAutoLocalCity } = useMap({\\n    center: '北京',\\n    widget: ['GeolocationControl', 'NavigationControl']\\n  });\\n  useEffect(() => {\\n    if (divElm.current && !map) {\\n      setContainer(divElm.current);\\n    }\\n  });\\n  useEffect(() => {\\n    if (map) {\\n      // 启用滚轮放大缩小，默认禁用\\n      map.enableScrollWheelZoom();\\n    }\\n  }, [map]);\\n\\n  useEffect(() => {\\n    if (map) {\\n      // 启用滚轮放大缩小，默认禁用\\n      map.setZoom(zoom);\\n    }\\n  }, [zoom, map]);\\n  \\n  return (\\n    <>\\n      <button onClick={() => setZoom(zoom-1)}>-</button>\\n      <span>{zoom || 15}</span>\\n      <button onClick={() => setZoom(zoom+1)}>+</button>\\n      <button onClick={() => setCenter('北京')}>北京</button>\\n      <button onClick={() => setCenter('上海')}>上海</button>\\n      <button onClick={() => setAutoLocalCity(true)}>IP定位</button>\\n      <div ref={divElm} style={{ height: '100%' }} />\\n    </>\\n  )\\n}\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%', height: '300px' }}>\\n    <APILoader akay=\\\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\\\">\\n      <Example />\\n    </APILoader>\\n  </div>\\n);\\nReactDOM.render(<Demo />, _mount_);\\n```\\n<!--End-->\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| widget | 百度地图上负责与地图交互的UI元素称为控件。[`百度控件文档`](http://lbsyun.baidu.com/index.php?title=jspopular3.0/guide/widget) | `string[]`/`object[]` | `[]` |\\n| center | 定位, 可使用如 `上海市青浦区` 的地区字符串，也可以使用对象如 `{lng: 121.424333, lat: 31.228604}` 表示经纬度。[百度拾取坐标系统](http://api.map.baidu.com/lbsapi/getpoint/index.html) | Point,String | `上海市` |\\n| autoLocalCity | 设为 `true`, IP定位获取当前城市，进行自动定位 | boolean | - |\\n| zoom | 缩放等级，如果 `center` 类型为 `Point` 时，zoom必须赋值，范围 `3-19` 级， 若调用高清底图（针对移动端开发）时，zoom 可赋值范围为 `3-18` 级。 如果center类型为字符串时，比如“北京”，zoom可以忽略，地图将自动根据 `center` 适配最佳 `zoom` 级别 | number | - |\\n| minZoom | 地图允许展示的最小级别 | number | - |\\n| maxZoom | 地图允许展示的最大级别 | number | - |\\n| mapType | 地图类型 | MapType | `BMAP_NORMAL_MAP` |\\n| enableHighResolution | 是否启用使用高分辨率地图。在iPhone4及其后续设备上，可以通过开启此选项获取更高分辨率的底图，v1.2,v1.3版本默认不开启，v1.4 默认为开启状态 | boolean | - |\\n| enableAutoResize | 地图允许展示的最大级别 | boolean | `true` |\\n| enableMapClick | 是否开启底图可点功能 | boolean | `true` |\\n| enableDragging | 启用地图拖拽，默认启用 | boolean | - |\\n| enableScrollWheelZoom | 启用滚轮放大缩小，默认禁用 | boolean | - |\\n| enableDoubleClickZoom | 启用双击放大，默认启用 | boolean | `true` |\\n| enableInertialDragging | 启用地图惯性拖拽，默认禁用 | boolean | - |\\n| enableContinuousZoom | 启用连续缩放效果，默认禁用 | boolean | - |\\n| enablePinchToZoom | 启用双指操作缩放，默认启用 | boolean | `true` |\\n| enableKeyboard | 启用键盘操作，默认禁用。键盘的上、下、左、右键可连续移动地图。同时按下其中两个键可使地图进行对角移动。PgUp、PgDn、Home和End键会使地图平移其1/2的大小。+、-键会使地图放大或缩小一级 | boolean | - |\\n| ready | 地图实例加载完成执行事件 | (bmap: typeof BMap, map: BMap.Map): void | - |\\n\""],"sourceRoot":""}