(window["webpackJsonp@uiw/react-baidu-map"]=window["webpackJsonp@uiw/react-baidu-map"]||[]).push([[142],{726:function(n,e,t){"use strict";t.r(e),e.default="CustomOverlay \u81ea\u5b9a\u4e49\u8986\u76d6\u7269\n===\n\n\u8868\u793a\u5730\u56fe\u4e0a\u4e00\u4e2a\u56fe\u50cf\u6807\u6ce8\u3002\n\n```jsx\nimport { CustomOverlay, useCustomOverlay } from '@uiw/react-baidu-map';\n```\n\n### \u57fa\u672c\u7528\u6cd5\n\n\x3c!--DemoStart,bgWhite--\x3e \n```jsx\nimport { APILoader, Map, Marker, CustomOverlay } from '@uiw/react-baidu-map';\n\nconst Demo = () => {\n  const [count, setCount] = useState(0);\n  function markerRef(props) {\n    if (props && props.customOverlay) {\n      console.log('CustomOverlay::', props.customOverlay, props.map, props.BMap);\n    }\n  }\n  function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    setCount(count + 1);\n  }\n  return (\n    <div style={{ width: '100%', height: '350px' }}>\n      <APILoader akay=\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\">\n        <Map widget={['NavigationControl']} zoom={13}>\n          <Marker position={{ lng: 121.466008, lat: 31.220001 }} />\n          <CustomOverlay\n            ref={markerRef}\n            position={{ lng: 121.466008, lat: 31.220001 }} \n            style={{ whiteSpace: 'nowrap', transform: `translateX(-50%)` }}\n          >\n            <div\n              style={{ backgroundColor: '#fff', padding: 5, whiteSpace: 'nowrap', transform: `translateX(-50%)` }}\n            >\n              <button onClick={handleClick}>\u70b9\u51fb\u9012\u589e{count}</button>\n            </div>\n          </CustomOverlay>\n          <CustomOverlay position={{ lng: 121.500934, lat: 31.229882 }} zIndex={99}>\n            <div style={{ backgroundColor: '#fff', padding: 5, borderRadius: 10, whiteSpace: 'nowrap', border: '1px solid #333', userSelect: 'initial' }}>\n              \u81ea\u5b9a\u4e49\u7684\u8986\u76d6\u7269\n            </div>\n          </CustomOverlay>\n          <CustomOverlay position={{ lng: 121.500934, lat: 31.23088 }}>\n            <div style={{ backgroundColor: '#fff', padding: 5, borderRadius: 10, whiteSpace: 'nowrap', border: '1px solid #333' }}>\n              \u81ea\u5b9a\u4e49\u7684\u8986\u76d6\u7269\uff0c\u7b2c\u4e8c\u4e2a\n            </div>\n          </CustomOverlay>\n        </Map>\n      </APILoader>\n    </div>\n  );\n};\nReactDOM.render(<Demo />, _mount_);\n```\n\x3c!--End--\x3e\n\n### \u4f7f\u7528 hooks\n\n`portal`, `setPortal`, `customOverlay`, `setCustomOverlay`\n\n\x3c!--DemoStart,bgWhite--\x3e \n```jsx\nimport { useRef, useEffect, useState } from 'react';\nimport { Map, APILoader, useMap, useMarker, useCustomOverlay } from '@uiw/react-baidu-map';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst Example = () => {\n  const divElm = useRef();\n  const [count, setCount] = useState(0);\n  const { setContainer, map } = useMap({\n    zoom: 13,\n    enableScrollWheelZoom: true,\n    widget: ['GeolocationControl', 'NavigationControl']\n  });\n  useMarker({ map, position: { lng: 121.466008, lat: 31.220001 } });\n\n  function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    setCount(count + 1);\n  }\n  const { portal } = useCustomOverlay({\n    map,\n    position: { lng: 121.466008, lat: 31.220001 },\n    children: (\n      <div style={{ backgroundColor: '#fff', padding: 5, whiteSpace: 'nowrap', transform: `translateX(-50%)` }}>\n        <button onClick={handleClick}>\u81ea\u5b9a\u4e49\u7684\u8986\u76d6\u7269{count}</button>\n      </div>\n    ),\n  });\n  useEffect(() => {\n    if (divElm.current && !map) {\n      setContainer(divElm.current);\n    }\n  });\n\n  return (\n    <>\n      <div ref={divElm} style={{ height: '100%' }} />\n      {portal}\n    </>\n  )\n}\n\nconst Demo = () => (\n  <div style={{ width: '100%', height: '300px' }}>\n    <APILoader akay=\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\">\n      <Example />\n    </APILoader>\n  </div>\n);\nReactDOM.render(<Demo />, _mount_);\n```\n\x3c!--End--\x3e\n\n### Props\n\n| \u53c2\u6570 | \u8bf4\u660e | \u7c7b\u578b | \u9ed8\u8ba4\u503c |\n| ----- | ----- | ----- | ----- |\n| visiable | \u8986\u76d6\u7269\u662f\u5426\u53ef\u89c1\u3002 | `boolean` | - |\n| strokeColor |  \u6298\u7ebf\u989c\u8272 | String | - |\n| strokeWeight |  \u6298\u7ebf\u7684\u5bbd\u5ea6\uff0c\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d | Number | - |\n| strokeOpacity |  \u6298\u7ebf\u7684\u900f\u660e\u5ea6\uff0c\u53d6\u503c\u8303\u56f40 - 1 | Number | - |\n| strokeStyle |  \u6298\u7ebf\u7684\u6837\u5f0f\uff0csolid\u6216dashed | String | - |\n| enableMassClear |  \u662f\u5426\u5728\u8c03\u7528map.clearOverlays\u6e05\u9664\u6b64\u8986\u76d6\u7269\uff0c\u9ed8\u8ba4\u4e3atrue | Boolean | - |\n| enableEditing |  \u662f\u5426\u542f\u7528\u7ebf\u7f16\u8f91\uff0c\u9ed8\u8ba4\u4e3afalse | Boolean | - |\n| enableClicking |  \u662f\u5426\u54cd\u5e94\u70b9\u51fb\u4e8b\u4ef6\uff0c\u9ed8\u8ba4\u4e3atrue | Boolean | - |\n| icons | \u914d\u7f6e\u8d34\u5408\u6298\u7ebf\u7684\u56fe\u6807 | IconSequence[] | - |"}}]);
//# sourceMappingURL=142.d148a3b6.chunk.js.map